# Default values for golang.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
# Defaults are set for local development with production values suggested bellow.

# The volume mounts will need to know an absolute path, so you will need to supply a path to the service.
# e.g. "/Users/simonince/git/lush-global-soa-architecture/services/device-registry" which will mount /Users/simonince/git/lush-global-soa-architecture/services/service-name
# This can be set easily by moving into the service directory and using "-set serviceLocation=$PWD" when install the chart.

serviceLocation: ""
# ""

serviceNamespace: "default"
# serviceNamespace will be created and set during CI.

ciEnvironmentSlug: ""
# ciEnvironmentSlug will be created and set during CI.

ciPipelineId: ""
# ciPipelineId will be created and set during CI.

ciBuildId: ""
# ciBuildId will be created and set during CI.

privateRegistryKey: ""
# ""

serviceImage: "registry.platformserviceaccount.com/lush-soa/template-service/java"
# ""

serviceImageTag: "latest"
# Tag will be created and set during CI.

serviceName: "java"
# "service-name"

serviceType: "microservice"

serviceScope: "global"

#service version is now passed in as an env variable to the docker build stage, so that it is immutable-ish
#serviceVersion: "0.0.1"

replicas: 1
# 3

projectId: "lush-global-soa-architecture"
# "lush-global-soa-architecture"

pullPolicy: "Never"
# "Always"

projectZone: ""
# "europe-west1"

podAutoscaling: 0
# 1

developmentVolumeMapping: 1
# 0

serviceIngress: 0
# 1

serviceEnvironment: "staging"

serviceBranch: ""

tlsKey: ""

tlsCert: ""

ciEnvironmentHostname: ""
# ciEnvironmentHostname will be created and set during CI.

# Additional environment variables required by the service.
# Specied in the pattern - name: value. Example:
#
# envVars:
#   A_NEW_VARIABLE: test
#   ANOTHER_VARIABLE: wibble
envVars:

setupJob: 0
# Should we dispatch a setup job on initial deploy? Options: 1 or 0

setupJobTimeout: 180
